% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vglmer_regression.R
\name{vglmer}
\alias{vglmer}
\title{Variational Inference for Non-Linear Hierarchical Models}
\usage{
vglmer(formula, data, family, control = vglmer_control())
}
\arguments{
\item{formula}{\code{lme4} formula for random effects. Options involving
\code{||} have not been tested. Typically, \code{(1 + Z | G)} indicates a
random effect for each level of variable \code{"G"} with a differing slope
for the effect of variable \code{"Z"} and an intercept (\code{1}). See,
e.g., Gelman and Hill (2006) for a discussion of these models. Splines can
be estimated as described in the "Details" section.}

\item{data}{data.frame containing the outcome and variables.}

\item{family}{Options are "binomial", "negbin", or "linear". If "binomial",
outcome must be either {0,1} (binary) or cbind(success, failure) as per
standard glm(er) syntax. Non-integer values are permitted for binomial if
\code{force_whole} is set to FALSE in vglmer_control.}

\item{control}{Adjust internal options for estimation. Must use an object
created by \link{vglmer_control}.}
}
\value{
Returns an object of class vglmer: See the available methods (e.g.
  \code{coef}) using \code{methods(class="vglmer")}. A few of the internal
  outputs are described below.
\describe{

\item{alpha}{Contains the posterior distribution of each random effect.
\code{mean} contains the posterior means; \code{dia.var} contains the
variance of each random effect. \code{var} contains the variance-covariance
matrix of each random effect (j,g). \code{decomp_var} contains a matrix L
such that L^T L the full variance of the entire set of random effects.}

\item{sigma}{Contains the posterior distribution of each random effect error
variance.}

\item{ELBO}{Contains the ELBO at the termination of the algorithm.}

\item{ELBO_trajectory}{A data.frame tracking the ELBO per iteration.}

}
}
\description{
Estimate hierarchicals model using mean-field variational inference. Accepts
standard syntax used for \code{lme4}, e.g., \code{y ~ X + (1 + Z | g)}. Options are
described below. Goplerud (2022a; 2022b) provides details on the variational
algorithm.
}
\details{
XX

\bold{Estimation Syntax:} The syntax
}
\examples{

sim_data <- data.frame(
  x = rnorm(100),
  y = rbinom(100, 1, 0.5),
  g = sample(letters, 100, replace = TRUE)
)

# Run with defaults
est_vglmer <- vglmer(y ~ x + (x | g), data = sim_data, family = "binomial")

# Simple prediction
predict(est_vglmer, newdata = sim_data)

# Summarize results
summary(est_vglmer)

# Extract parameters
coef(est_vglmer); vcov(est_vglmer)

# Comparability with lme4,
# although ranef is formatted differently.
ranef(est_vglmer); fixef(est_vglmer)

# Run with weaker (i.e. better) approximation
\donttest{
vglmer(y ~ x + (x | g),
  data = sim_data,
  control = vglmer_control(factorization_method = "weak"),
  family = "binomial"
)
}

}
\references{
Goplerud, Max. 2022. "Fast and Accurate Estimation of Non-Nested Binomial
Hierarchical Models Using Variational Inference." Bayesian Analysis. 17(2):
623-650.
}
