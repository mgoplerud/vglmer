% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vglmer_regression.R
\name{vglmer}
\alias{vglmer}
\title{Variational Inference for Non-Linear Hierarchical Models}
\usage{
vglmer(formula, data, family, control = vglmer_control())
}
\arguments{
\item{formula}{Standard glmer-style formula for random effects.}

\item{data}{data.frame containing the outcome and variables.}

\item{family}{Options are "binomial" or "negbin". If "binomial", outcome must
be either {0,1} (binary) or cbind(success, failure) as per standard glm(er)
syntax. Non-integer values are permitted for binomial if "force_whole" is
set to FALSE in vglmer_control.}

\item{control}{Control additional arguments. Must be made using
vglmer_control(); see for documentation for additional details.}
}
\description{
Estimate a hierarchical model using mean-field variational
inference. Accepts standard syntax to glmer: y ~ X + (1 + Z | g). Options are
described below.
}
\examples{

sim_data <- data.frame(x = rnorm(100), 
y = rbinom(100, 1, 0.5), 
g =sample(letters, 100, replace = TRUE))

# Run with defaults
est_vglmer <- vglmer(y ~ x + (x|g), data = sim_data, family = "binomial")

# Simple prediction 
predict(est_vglmer, newdata = sim_data)

# Summarize results
summary(est_vglmer)

# Extract parameters
coef(est_vglmer); vcov(est_vglmer)

# Comparability with lme4, 
# although ranef is formatted differently.
ranef(est_vglmer); fixef(est_vglmer)

#' # Run with stronger (i.e. less good) approximation
\dontrun{
vglmer(y ~ x + (x|g), data = sim_data, 
control = vglmer_control(factorization_method = "strong"),
family = "binomial")
}

}
